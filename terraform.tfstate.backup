{
  "version": 4,
  "terraform_version": "0.14.4",
  "serial": 17,
  "lineage": "95bc17f9-93f7-ff86-4c7b-4c26b2f9736e",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "image_builder",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3147853462",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssmmessages:OpenDataChannel\",\n        \"ssmmessages:OpenControlChannel\",\n        \"ssmmessages:CreateDataChannel\",\n        \"ssmmessages:CreateControlChannel\",\n        \"ssm:UpdateInstanceInformation\",\n        \"ssm:UpdateInstanceAssociationStatus\",\n        \"ssm:UpdateAssociationStatus\",\n        \"ssm:PutInventory\",\n        \"ssm:PutConfigurePackageResult\",\n        \"ssm:PutComplianceItems\",\n        \"ssm:ListInstanceAssociations\",\n        \"ssm:ListAssociations\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\",\n        \"ssm:GetManifest\",\n        \"ssm:GetDocument\",\n        \"ssm:GetDeployablePatchSnapshotForInstance\",\n        \"ssm:DescribeDocument\",\n        \"ssm:DescribeAssociation\",\n        \"imagebuilder:GetComponent\",\n        \"ec2messages:SendReply\",\n        \"ec2messages:GetMessages\",\n        \"ec2messages:GetEndpoint\",\n        \"ec2messages:FailMessage\",\n        \"ec2messages:DeleteMessage\",\n        \"ec2messages:AcknowledgeMessage\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::ec2imagebuilder*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"arn:aws:logs:*:*:log-group:/aws/imagebuilder/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"ForAnyValue:StringEquals\": {\n          \"aws:CalledVia\": [\n            \"imagebuilder.amazonaws.com\"\n          ],\n          \"kms:EncryptionContextKeys\": [\n            \"aws:imagebuilder:arn\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2messages:AcknowledgeMessage",
                  "ec2messages:DeleteMessage",
                  "ec2messages:FailMessage",
                  "ec2messages:GetEndpoint",
                  "ec2messages:GetMessages",
                  "ec2messages:SendReply",
                  "imagebuilder:GetComponent",
                  "ssm:DescribeAssociation",
                  "ssm:DescribeDocument",
                  "ssm:GetDeployablePatchSnapshotForInstance",
                  "ssm:GetDocument",
                  "ssm:GetManifest",
                  "ssm:GetParameter",
                  "ssm:GetParameters",
                  "ssm:ListAssociations",
                  "ssm:ListInstanceAssociations",
                  "ssm:PutComplianceItems",
                  "ssm:PutConfigurePackageResult",
                  "ssm:PutInventory",
                  "ssm:UpdateAssociationStatus",
                  "ssm:UpdateInstanceAssociationStatus",
                  "ssm:UpdateInstanceInformation",
                  "ssmmessages:CreateControlChannel",
                  "ssmmessages:CreateDataChannel",
                  "ssmmessages:OpenControlChannel",
                  "ssmmessages:OpenDataChannel"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "s3:GetObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:s3:::ec2imagebuilder*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "kms:Decrypt"
                ],
                "condition": [
                  {
                    "test": "ForAnyValue:StringEquals",
                    "values": [
                      "aws:imagebuilder:arn"
                    ],
                    "variable": "kms:EncryptionContextKeys"
                  },
                  {
                    "test": "ForAnyValue:StringEquals",
                    "values": [
                      "imagebuilder.amazonaws.com"
                    ],
                    "variable": "aws:CalledVia"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_kms_key",
      "name": "image_builder",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-1:417149913937:key/6a067550-ffde-4cb0-8e04-26bcb050e178",
            "aws_account_id": "417149913937",
            "creation_date": "2021-07-08T11:05:07Z",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_date": null,
            "description": "KMS key for image builder",
            "enabled": true,
            "expiration_model": "",
            "grant_tokens": null,
            "id": "6a067550-ffde-4cb0-8e04-26bcb050e178",
            "key_id": "alias/image-builder",
            "key_manager": "CUSTOMER",
            "key_state": "Enabled",
            "key_usage": "ENCRYPT_DECRYPT",
            "origin": "AWS_KMS",
            "valid_to": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:417149913937:security-group/sg-56927561",
            "description": "default VPC security group",
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "default-sec-group"
                ]
              }
            ],
            "id": "sg-56927561",
            "name": "default",
            "tags": {
              "Name": "default-sec-group"
            },
            "vpc_id": "vpc-a59b45d8"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:417149913937:subnet/subnet-d1ee6cb7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1d",
            "availability_zone_id": "use1-az1",
            "available_ip_address_count": 4091,
            "cidr_block": "172.31.0.0/20",
            "customer_owned_ipv4_pool": "",
            "default_for_az": true,
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "default-public-1d"
                ]
              }
            ],
            "id": "subnet-d1ee6cb7",
            "ipv6_cidr_block": null,
            "ipv6_cidr_block_association_id": null,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "417149913937",
            "state": "available",
            "tags": {
              "Name": "default-public-1d"
            },
            "vpc_id": "vpc-a59b45d8"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_component",
      "name": "cw_agent",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:imagebuilder:us-east-1:417149913937:component/amazon-cloudwatch-agent-linux/1.0.0/1",
            "change_description": "",
            "data": "# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: MIT-0\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this\n# software and associated documentation files (the \"Software\"), to deal in the Software\n# without restriction, including without limitation the rights to use, copy, modify,\n# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nname: Amazon CloudWatch Agent\ndescription: Installs the latest version of the Amazon CloudWatch agent. This component installs only the agent. You must take additional steps to configure and use the Amazon CloudWatch agent. For more information, see the documentation at https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-EC2-Instance.html.\nschemaVersion: 1.0\nphases:\n  - name: build\n    steps:\n      - name: Fail\n        action: ExecuteBash\n        inputs:\n          commands:\n            - echo 1\n\n      - name: OperatingSystemRelease\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              FILE=/etc/os-release\n              if [ -e $FILE ]; then\n                . $FILE\n                echo \"$ID${VERSION_ID:+.${VERSION_ID}}\"\n              else\n                echo \"The file '$FILE' does not exist. Failing build.\"\n                exit {{ build.Fail.outputs.stdout }}\n              fi\n\n      - name: IsOperatingSystemSupported\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              RELEASE='{{ build.OperatingSystemRelease.outputs.stdout }}'\n              if [ `echo \"$RELEASE\" | grep -Ev '^(amzn|centos|debian|rhel|sles|ubuntu)'` ]; then\n                echo \"This component does not support '$RELEASE'. Failing build.\"\n                exit {{ build.Fail.outputs.stdout }}\n              fi\n\n              # This component only supports aarch64 CPUs on Amazon Linux 2, RHEL, SUSE and Ubuntu\n              ARCH=$(uname -m)\n              if [[ `echo $ARCH` == 'aarch64' ]]; then\n                if [ `echo \"$RELEASE\" | grep -Ev '^(amzn\\.2|rhel|sles|ubuntu)'` ]; then\n                  echo \"This component does not support '$RELEASE' on ARM64 CPUs. Failing build.\"\n                  exit {{ build.Fail.outputs.stdout }}\n                fi\n              fi\n\n      - name: OperatingSystemArchitecture\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              ARCH=$(uname -m)\n              case $ARCH in\n                'x86_64')\n                  echo 'amd64'\n                  ;;\n                'aarch64')\n                  echo 'arm64'\n                  ;;\n                *)\n                  echo \"The '$ARCH' architecture is not supported. Failing build.\"\n                  exit {{ build.Fail.outputs.stdout }}\n                  ;;\n              esac\n\n      - name: FileExtension\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              RELEASE='{{ build.OperatingSystemRelease.outputs.stdout }}'\n              if [ `echo \"$RELEASE\" | grep -E '^(amzn|centos|rhel|sles)'` ]; then\n                echo 'rpm'\n              elif [ `echo \"$RELEASE\" | grep -E '^(debian|ubuntu)'` ]; then\n                echo 'deb'\n              else\n                echo \"The Operating System $RELEASE does not have a file extension specified. Failing build.\"\n                exit {{ build.Fail.outputs.stdout }}\n              fi\n\n      - name: Source\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              RELEASE='{{ build.OperatingSystemRelease.outputs.stdout }}'\n              TYPE='{{ build.OperatingSystemArchitecture.outputs.stdout }}'\n              EXTENSION='{{ build.FileExtension.outputs.stdout }}'\n\n              if [ `echo \"$RELEASE\" | grep '^amzn'` ]; then\n                OS='amazon_linux'\n              elif [ `echo \"$RELEASE\" | grep '^centos'` ]; then\n                OS='centos'\n              elif [ `echo \"$RELEASE\" | grep '^debian'` ]; then\n                OS='debian'\n              elif [ `echo \"$RELEASE\" | grep '^rhel'` ]; then\n                OS='redhat'\n              elif [ `echo \"$RELEASE\" | grep '^sles'` ]; then\n                OS='suse'\n              elif [ `echo \"$RELEASE\" | grep '^ubuntu'` ]; then\n                OS='ubuntu'\n              else\n                echo \"Operating System '$RELEASE' is not supported. Failing build.\"\n                exit {{ build.Fail.outputs.stdout }}\n              fi\n\n              echo \"https://s3.us-east-1.amazonaws.com/amazoncloudwatch-agent-us-east-1/$OS/$TYPE/latest/amazon-cloudwatch-agent.$EXTENSION\"\n\n      - name: Installer\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              EXTENSION='{{ build.FileExtension.outputs.stdout }}'\n              echo \"/tmp/amazon-cloudwatch-agent.$EXTENSION\"\n\n      - name: InstallationRequirements\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              if [ `which apt 2\u003e /dev/null` ]; then\n                sudo apt install --quiet -y curl 2\u003e /dev/null\n              elif [ `which yum 2\u003e /dev/null` ]; then\n                sudo yum install --quiet -y curl\n              elif [ `which zypper 2\u003e /dev/null` ]; then\n                sudo zypper --quiet install -y curl\n              fi\n\n      - name: Download\n        action: ExecuteBash\n        inputs:\n          commands:\n            - echo \"Downloading '{{ build.Source.outputs.stdout }}' to '{{ build.Installer.outputs.stdout }}'\"\n            - curl -s '{{ build.Source.outputs.stdout }}' -o '{{ build.Installer.outputs.stdout }}'\n\n      - name: Install\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              EXTENSION='{{ build.FileExtension.outputs.stdout }}'\n              INSTALLER='{{ build.Installer.outputs.stdout }}'\n              if [[ $EXTENSION == 'rpm' ]]; then\n                sudo rpm --upgrade $INSTALLER --force\n              elif [[ $EXTENSION == 'deb' ]]; then\n                sudo dpkg -i -E $INSTALLER\n              else\n                echo 'Installation not defined for $RELEASE. Failing build.'\n                exit {{ build.Fail.outputs.stdout }}\n              fi\n\n      - name: Cleanup\n        action: ExecuteBash\n        inputs:\n          commands:\n            - INSTALLER='{{ build.Installer.outputs.stdout }}'\n            - echo \"Deleting '$INSTALLER'\"\n            - rm $INSTALLER\n\n  - name: validate\n    steps:\n      - name: Fail\n        action: ExecuteBash\n        inputs:\n          commands:\n            - echo 1\n\n      - name: OperatingSystemRelease\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              FILE=/etc/os-release\n              if [ -e $FILE ]; then\n                . $FILE\n                echo \"$ID${VERSION_ID:+.${VERSION_ID}}\"\n              else\n                echo \"The file '$FILE' does not exist. Failing validation.\"\n                exit {{ validate.Fail.outputs.stdout }}\n              fi\n\n      - name: IsOperatingSystemSupported\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              RELEASE='{{ validate.OperatingSystemRelease.outputs.stdout }}'\n              if [ `echo \"$RELEASE\" | grep -Ev '^(amzn|centos|debian|rhel|sles|ubuntu)'` ]; then\n                echo \"This component does not support '$RELEASE'. Failing build.\"\n                exit {{ validate.Fail.outputs.stdout }}\n              fi\n\n              # This component only supports aarch64 CPUs on Amazon Linux 2 or SUSE\n              ARCH=$(uname -m)\n              if [[ `echo $ARCH` == 'aarch64' ]]; then\n                if [ `echo \"$RELEASE\" | grep -Ev '^(amzn\\.2|rhel|sles|ubuntu)'` ]; then\n                  echo \"This component does not support '$RELEASE' on ARM64 CPUs. Failing build.\"\n                  exit {{ validate.Fail.outputs.stdout }}\n                fi\n              fi\n\n      - name: FindAmazonCloudWatchAgent\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              RELEASE='{{ validate.OperatingSystemRelease.outputs.stdout }}'\n              if [ `echo \"$RELEASE\" | grep -E '^(amzn|centos|rhel)'` ]; then\n                yum list installed | grep '^amazon-cloudwatch-agent' 1\u003e /dev/null\n                echo $?\n              elif [ `echo \"$RELEASE\" | grep -E '^sles'` ]; then\n                rpm -qa --last | grep '^amazon-cloudwatch-agent' 1\u003e /dev/null\n                echo $?\n              elif [ `echo \"$RELEASE\" | grep -E '^(debian|ubuntu)'` ]; then\n                apt list --installed 2\u003e /dev/null | grep '^amazon-cloudwatch-agent' 1\u003e /dev/null\n                echo $?\n              else\n                echo {{ validate.Fail.outputs.stdout }}\n              fi\n\n      - name: AssertInstallation\n        action: ExecuteBash\n        inputs:\n          commands:\n            - |\n              SUCCESS='{{ validate.FindAmazonCloudWatchAgent.outputs.stdout }}'\n              if [[ $SUCCESS == 0 ]]; then\n                echo 'The Amazon CloudWatch Agent is installed.'\n              else\n                echo 'The Amazon CloudWatch Agent is not installed. Failing validation.'\n                exit {{ validate.Fail.outputs.stdout }}\n              fi\n",
            "date_created": "2021-08-09T11:11:16.637Z",
            "description": "",
            "encrypted": true,
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:component/amazon-cloudwatch-agent-linux/1.0.0/1",
            "kms_key_id": "arn:aws:kms:us-east-1:417149913937:key/6a067550-ffde-4cb0-8e04-26bcb050e178",
            "name": "amazon-cloudwatch-agent-linux",
            "owner": "417149913937",
            "platform": "Linux",
            "supported_os_versions": null,
            "tags": null,
            "tags_all": {},
            "type": "BUILD",
            "uri": "s3://cloudly-engineer-dev-misc/files/amazon-cloudwatch-agent-linux.yml",
            "version": "1.0.0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket_object.cw_agent_upload",
            "data.aws_kms_key.image_builder"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_distribution_configuration",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:imagebuilder:us-east-1:417149913937:distribution-configuration/local-distribution",
            "date_created": "2021-08-09T11:11:16.544Z",
            "date_updated": "",
            "description": "",
            "distribution": [
              {
                "ami_distribution_configuration": [
                  {
                    "ami_tags": null,
                    "description": "",
                    "kms_key_id": "",
                    "launch_permission": [],
                    "name": "",
                    "target_account_ids": []
                  }
                ],
                "license_configuration_arns": [],
                "region": "us-east-1"
              }
            ],
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:distribution-configuration/local-distribution",
            "name": "local-distribution",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_image",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "arn": null,
            "date_created": null,
            "distribution_configuration_arn": "arn:aws:imagebuilder:us-east-1:417149913937:distribution-configuration/local-distribution",
            "enhanced_image_metadata_enabled": true,
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:image/amazon-linux-recipe/1.0.0/1",
            "image_recipe_arn": "arn:aws:imagebuilder:us-east-1:417149913937:image-recipe/amazon-linux-recipe/1.0.0",
            "image_tests_configuration": null,
            "infrastructure_configuration_arn": "arn:aws:imagebuilder:us-east-1:417149913937:infrastructure-configuration/amazon-linux-infr",
            "name": null,
            "os_version": null,
            "output_resources": null,
            "platform": null,
            "tags": null,
            "tags_all": null,
            "timeouts": null,
            "version": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_imagebuilder_component.cw_agent",
            "aws_imagebuilder_distribution_configuration.this",
            "aws_imagebuilder_image_recipe.this",
            "aws_imagebuilder_infrastructure_configuration.this",
            "aws_s3_bucket_object.cw_agent_upload",
            "data.aws_kms_key.image_builder",
            "data.aws_partition.current",
            "data.aws_region.current",
            "data.aws_security_group.this",
            "data.aws_subnet.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_image_pipeline",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:imagebuilder:us-east-1:417149913937:image-pipeline/amazon-linux-baseline",
            "date_created": "2021-08-09T11:11:20.695Z",
            "date_last_run": "",
            "date_next_run": "",
            "date_updated": "2021-08-09T11:11:20.695Z",
            "description": "",
            "distribution_configuration_arn": "",
            "enhanced_image_metadata_enabled": true,
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:image-pipeline/amazon-linux-baseline",
            "image_recipe_arn": "arn:aws:imagebuilder:us-east-1:417149913937:image-recipe/amazon-linux-recipe/1.0.0",
            "image_tests_configuration": [
              {
                "image_tests_enabled": true,
                "timeout_minutes": 720
              }
            ],
            "infrastructure_configuration_arn": "arn:aws:imagebuilder:us-east-1:417149913937:infrastructure-configuration/amazon-linux-infr",
            "name": "amazon-linux-baseline",
            "platform": "Linux",
            "schedule": [
              {
                "pipeline_execution_start_condition": "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE",
                "schedule_expression": "cron(0 9 ? * thu)"
              }
            ],
            "status": "ENABLED",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_imagebuilder_component.cw_agent",
            "aws_imagebuilder_image_recipe.this",
            "aws_imagebuilder_infrastructure_configuration.this",
            "aws_s3_bucket_object.cw_agent_upload",
            "data.aws_kms_key.image_builder",
            "data.aws_partition.current",
            "data.aws_region.current",
            "data.aws_security_group.this",
            "data.aws_subnet.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_image_recipe",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:imagebuilder:us-east-1:417149913937:image-recipe/amazon-linux-recipe/1.0.0",
            "block_device_mapping": [
              {
                "device_name": "/dev/xvdb",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "",
                    "iops": null,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "volume_size": 10,
                    "volume_type": "gp3"
                  }
                ],
                "no_device": null,
                "virtual_name": ""
              }
            ],
            "component": [
              {
                "component_arn": "arn:aws:imagebuilder:us-east-1:417149913937:component/amazon-cloudwatch-agent-linux/1.0.0/1"
              }
            ],
            "date_created": "2021-08-09T11:11:19.075Z",
            "description": "",
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:image-recipe/amazon-linux-recipe/1.0.0",
            "name": "amazon-linux-recipe",
            "owner": "417149913937",
            "parent_image": "arn:aws:imagebuilder:us-east-1:aws:image/amazon-linux-2-x86/x.x.x",
            "platform": "Linux",
            "tags": null,
            "tags_all": {},
            "version": "1.0.0",
            "working_directory": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_imagebuilder_component.cw_agent",
            "aws_s3_bucket_object.cw_agent_upload",
            "data.aws_kms_key.image_builder",
            "data.aws_partition.current",
            "data.aws_region.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_imagebuilder_infrastructure_configuration",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:imagebuilder:us-east-1:417149913937:infrastructure-configuration/amazon-linux-infr",
            "date_created": "2021-08-09T11:11:16.659Z",
            "date_updated": "",
            "description": "Simple infrastructure configuration",
            "id": "arn:aws:imagebuilder:us-east-1:417149913937:infrastructure-configuration/amazon-linux-infr",
            "instance_profile_name": "svc-image-builder-role",
            "instance_types": [
              "t2.micro"
            ],
            "key_pair": "image-builder-kp",
            "logging": [
              {
                "s3_logs": [
                  {
                    "s3_bucket_name": "cloudly-engineer-dev-logs",
                    "s3_key_prefix": "image-builder"
                  }
                ]
              }
            ],
            "name": "amazon-linux-infr",
            "resource_tags": null,
            "security_group_ids": [
              "sg-56927561"
            ],
            "sns_topic_arn": "",
            "subnet_id": "subnet-d1ee6cb7",
            "tags": {
              "foo": "bar"
            },
            "tags_all": {
              "foo": "bar"
            },
            "terminate_instance_on_failure": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_security_group.this",
            "data.aws_subnet.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "cw_agent_upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "cloudly-engineer-dev-misc",
            "bucket_key_enabled": false,
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "82e66ca5832834767921c80642d924cb",
            "force_destroy": false,
            "id": "/files/amazon-cloudwatch-agent-linux.yml",
            "key": "/files/amazon-cloudwatch-agent-linux.yml",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./files/amazon-cloudwatch-agent-linux.yml",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.image_builder_role",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::417149913937:instance-profile/svc-image-builder-role",
            "create_date": "2021-08-09T10:59:03Z",
            "id": "svc-image-builder-role",
            "name": "svc-image-builder-role",
            "name_prefix": null,
            "path": "/",
            "role": "svc-image-builder-role",
            "tags": {},
            "tags_all": {},
            "unique_id": "AIPAWCIASRNI636CRBYEF"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.image_builder_role.aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "module": "module.image_builder_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::417149913937:policy/svc-image-builder-role",
            "description": "IAM ec2 instance profile for the Image Builder instances.",
            "id": "arn:aws:iam::417149913937:policy/svc-image-builder-role",
            "name": "svc-image-builder-role",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssmmessages:OpenDataChannel\",\n        \"ssmmessages:OpenControlChannel\",\n        \"ssmmessages:CreateDataChannel\",\n        \"ssmmessages:CreateControlChannel\",\n        \"ssm:UpdateInstanceInformation\",\n        \"ssm:UpdateInstanceAssociationStatus\",\n        \"ssm:UpdateAssociationStatus\",\n        \"ssm:PutInventory\",\n        \"ssm:PutConfigurePackageResult\",\n        \"ssm:PutComplianceItems\",\n        \"ssm:ListInstanceAssociations\",\n        \"ssm:ListAssociations\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\",\n        \"ssm:GetManifest\",\n        \"ssm:GetDocument\",\n        \"ssm:GetDeployablePatchSnapshotForInstance\",\n        \"ssm:DescribeDocument\",\n        \"ssm:DescribeAssociation\",\n        \"imagebuilder:GetComponent\",\n        \"ec2messages:SendReply\",\n        \"ec2messages:GetMessages\",\n        \"ec2messages:GetEndpoint\",\n        \"ec2messages:FailMessage\",\n        \"ec2messages:DeleteMessage\",\n        \"ec2messages:AcknowledgeMessage\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::ec2imagebuilder*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"arn:aws:logs:*:*:log-group:/aws/imagebuilder/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"ForAnyValue:StringEquals\": {\n          \"aws:CalledVia\": [\n            \"imagebuilder.amazonaws.com\"\n          ],\n          \"kms:EncryptionContextKeys\": [\n            \"aws:imagebuilder:arn\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "policy_id": "ANPAWCIASRNIUEKGK4GCX",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.image_builder"
          ]
        }
      ]
    },
    {
      "module": "module.image_builder_role",
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "groups": [],
            "id": "svc-image-builder-role",
            "name": "svc-image-builder-role",
            "policy_arn": "arn:aws:iam::417149913937:policy/svc-image-builder-role",
            "roles": [
              "svc-image-builder-role"
            ],
            "users": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.image_builder",
            "module.image_builder_role.aws_iam_policy.this",
            "module.image_builder_role.aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "module": "module.image_builder_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::417149913937:role/svc-image-builder-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-08-09T10:59:03Z",
            "description": "",
            "force_detach_policies": false,
            "id": "svc-image-builder-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::417149913937:policy/svc-image-builder-role"
            ],
            "max_session_duration": 3600,
            "name": "svc-image-builder-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAWCIASRNI6UFDKYBYY"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
